/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_XBMCREMOTECLIENT_H_
#define JSONRPC_CPP_STUB_XBMCREMOTECLIENT_H_

#include <jsonrpccpp/client.h>

class XbmcRemoteClient : public jsonrpc::Client
{
    public:
        XbmcRemoteClient(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

        std::string Input_Left() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Left",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        std::string Input_Right() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Right",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        std::string Input_Up() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Up",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        std::string Input_Down() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Down",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        std::string Input_Back() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Back",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        std::string Input_Select() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("Input.Select",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
};

#endif //JSONRPC_CPP_STUB_XBMCREMOTECLIENT_H_
